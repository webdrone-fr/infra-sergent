# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Auto-CI-To-DockerHub

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # A job that build an artifact file with maven
  build-artifact:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      artifact_version: ${{ steps.dump.outputs.artifact_version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11.0.5'
          distribution: 'adopt'
          cache: maven
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Dump the artifact version
        id: dump
        run: |
          JAR_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=artifact_version::${JAR_VERSION}
      - name: Build with Maven
        run: ./mvnw package -Pnative -DskipTests

      - name: Save the artifact file temporarily
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ${{ github.workspace }}/target/sergent-${{steps.dump.outputs.artifact_version}}-runner
          retention-days: 1

  # A job that build docker image and push it to dockerhub
  build-docker:
    runs-on: ubuntu-latest
    needs: build-artifact

    steps:
      - uses: actions/checkout@v2

      - name: Get the artifact file
        uses: actions/download-artifact@v1
        with:
            name: artifact
            path: target/

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build cache reduces the build time. For this, use of GitHub cache.
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      # Build and push docker image
      - name: Build/Push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./src/main/docker/Dockerfile.native
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags:  webdronesas/sergent:${{needs.build-artifact.outputs.artifact_version}},webdronesas/sergent:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
